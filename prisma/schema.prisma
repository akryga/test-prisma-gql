generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../prisma/generated/type-graphql"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model group {
  id              Int     @id @default(autoincrement())
  title           String? @db.VarChar(45)
  rights          String? @db.VarChar(45)
  parent_group_id Int
  group           group   @relation("groupTogroup", fields: [parent_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_group1")
  other_group     group[] @relation("groupTogroup")
  user            user[]

  @@index([parent_group_id], map: "fk_group_group1_idx")
}

model user {
  id         Int          @id @default(autoincrement())
  name       String?      @db.VarChar(45)
  middlename String?      @db.VarChar(45)
  lastname   String?      @db.VarChar(45)
  birthday   DateTime?    @db.Date
  created    DateTime     @default(now()) @db.Timestamp(0)
  updated    DateTime     @default(now()) @db.Timestamp(0)
  group_id   Int?
  nchildren  Int          @default(0) @db.TinyInt
  group      group?       @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_group1")
  user_email user_email[]

  @@index([group_id], map: "fk_user_group1_idx")
}

model user_email {
  id      Int     @id @default(autoincrement())
  email   String? @db.VarChar(45)
  user_id Int
  user    user    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_email_user1")

  @@index([user_id], map: "fk_user_email_user_idx")
}
